AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
Resources:
  # slack event processor
  SlackEvent:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      Handler: qanda/function/slack_event.lambda_handler
      Runtime: python3.7
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
  # slack slashcommand processor
  SlackSlashcommand:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      Handler: qanda/function/slack_slashcommand.lambda_handler
      Runtime: python3.7
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
  # webapp
  Flask:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      Handler: qanda/index.lambda_handler
      Runtime: python3.7
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          SLACK_EVENT_FUNCTION: !Ref SlackEvent
          SLACK_SLASH_FUNCTION: !Ref SlackSlashcommand
      Events:
        FlaskProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "ssm:GetParameter"
                - "ssm:GetParameters"
              Resource:
                - "qanda_*"
                - "qa_*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:Query"
              Resource:
                - !Ref MessageTable
                - !Ref QuestionTable
                - !Ref AnswerTable
                - !Ref SubscriberTable
                - !Ref AuthTokenTable


  # TABLES:
  MessageTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 'qanda.message'
      PrimaryKey:
        Name: id
        Type: String
      Tags:
        app: qanda
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  QuestionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 'qanda.question'
      PrimaryKey:
        Name: id
        Type: String
      Tags:
        app: qanda
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  AnswerTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 'qanda.answer'
      PrimaryKey:
        Name: id
        Type: String
      Tags:
        app: qanda
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  SubscriberTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 'qanda.subscriber'
      PrimaryKey:
        Name: id
        Type: String
      Tags:
        app: qanda
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  AuthTokenTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 'qanda.auth_token'
      PrimaryKey:
        Name: id
        Type: String
      Tags:
        app: qanda
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
